{"version":3,"sources":["components/Main.js","components/admin/ForgetPassword.js","components/admin/Login.js","components/admin/DashboardCard.js","components/admin/Dashboard.js","App.js","index.js","store/atom.js"],"names":["Pages","lazy","Main","className","fallback","Loader","active","size","ForgetPassword","useState","email","setEmail","code","setCode","verify","setVerify","errors","setErrors","loading","setLoading","err","text","setText","setIsLoggedIn","useSetRecoilState","authenticate","setProfile","ProfileData","history","useHistory","handleSubmitEmail","a","axios","post","process","then","catch","e","response","data","msg","handleSubmitVerify","localStorage","setItem","token","id","get","res","push","console","log","VerifyCode","Form","onSubmit","Input","icon","name","error","iconPosition","placeholder","value","onChange","Button","fluid","color","EmailForm","type","Login","Helmet","errorDisplay","password","useRecoilState","isLoggedIn","resetPassword","setResetPassword","setData","React","useEffect","handleChange","handleSubmit","userId","to","login","reset","Icon","onClick","primary","content","DashboardCard","props","town","title","desc","UserList","WorkList","ContactList","SkillList","Profile","EducationList","Dashboard","loggedIn","setLoggedIn","component","setComponent","profile","useRecoilValue","getItem","DashBoard","StateComponent","Output","href","target","removeItem","inverted","style","width","height","App","loader","setLoadError","logging","clear","fetch","path","exact","ReactDOM","render","document","getElementById","atom","key","default","loadError"],"mappings":"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","file":"static/js/main.4c8ffee1.chunk.js","sourcesContent":["import React, {lazy, Suspense} from 'react';\r\nimport {Loader} from \"semantic-ui-react\";\r\nconst Pages = lazy(() => import(\"./Pages\"))\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Suspense fallback={<Loader active size=\"massive\" />}>\r\n                <Pages />\r\n            </Suspense>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;","import React, {useState} from 'react';\r\nimport {Button, Form} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useSetRecoilState} from \"recoil\";\r\nimport {isLoggedIn as authenticate, ProfileData} from \"../../store/atom\";\r\nimport {Fade} from \"react-reveal\";\r\n\r\nconst ForgetPassword = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [data, setData] = useState({email: '', code: ''})\r\n    const [code, setCode] = useState('')\r\n    const [verify, setVerify] = useState(false)\r\n    const [errors, setErrors] = useState({email: false, code: false})\r\n    const [loading, setLoading] = useState(false)\r\n    const [text, setText] = useState(\r\n        {err: false, text: \"Enter the email associated with your account:\"})\r\n    const setIsLoggedIn = useSetRecoilState(authenticate)\r\n    const setProfile = useSetRecoilState(ProfileData)\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    const handleSubmitEmail = async () => {\r\n        if (!email) {\r\n            setErrors({email: true})\r\n        } else {\r\n            setLoading(true)\r\n            setText({err: false, text: \"Please wait...\"})\r\n            await axios.post(`${process.env.REACT_APP_API}/api/auth/recover_password`, {'email': email})\r\n                .then(() => {\r\n                    setLoading(false)\r\n                    setVerify(true)\r\n                    setText({err: false, text: \"Enter the verification code that was sent to your email:\"})\r\n                })\r\n                .catch(e => {\r\n                    setErrors({email: true})\r\n                    if (e.response) {\r\n                        setText({err: true, text: e.response.data.msg})\r\n                    } else {\r\n                        setText({err: true, text: \"Internal server error.\"})\r\n                    }\r\n                    setLoading(false)\r\n                    setVerify(false)\r\n\r\n                    setLoading(false)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmitVerify = async () => {\r\n        if (!code) {\r\n            setErrors({code: true})\r\n        } else {\r\n            setLoading(true)\r\n            setText({err: false, text: \"Please wait...\"})\r\n            await axios.post(`${process.env.REACT_APP_API}/api/auth/verify_code`, {'code': code})\r\n                .then(response => {\r\n                    localStorage.setItem(\"TKID\", response.data.token)\r\n                    localStorage.setItem(\"_id\", response.data.id)\r\n                    setIsLoggedIn(true)\r\n                    axios.get(`${process.env.REACT_APP_API}/api/profilelist`)\r\n                        .then(res => {\r\n                            setProfile(res.data)\r\n                        })\r\n                    setLoading(false)\r\n                    history.push('/build')\r\n                })\r\n                .catch(e => {\r\n                    console.log(e.response.data)\r\n                    setErrors({code: true})\r\n                    if (e.response) {\r\n                        setText({err: true, text: e.response.data.msg})\r\n                    } else {\r\n                        setText({err: true, text: \"Internal server error.\"})\r\n                    }\r\n                    setLoading(false)\r\n                })\r\n        }\r\n    }\r\n\r\n    const VerifyCode = (\r\n        <Fade>\r\n            <Form className='mb-4' onSubmit={handleSubmitVerify} loading={loading}>\r\n                <p className={`${text.err && 'text-danger text-center'}`}>{text.text}</p>\r\n                <Form.Input\r\n                    icon='code'\r\n                    name=\"code\"\r\n                    error={errors.code}\r\n                    iconPosition='left'\r\n                    placeholder='Enter the verification code'\r\n                    size={\"large\"}\r\n                    value={code}\r\n                    onChange={(e, {value}) => setCode(value)}\r\n                />\r\n                <Button fluid color='blue' size={\"large\"}>Submit</Button>\r\n            </Form>\r\n        </Fade>\r\n    )\r\n\r\n\r\n    const EmailForm = (\r\n        <Fade>\r\n            <Form className='mb-4' onSubmit={handleSubmitEmail} loading={loading}>\r\n                <p className={`${text.err && 'text-danger text-center'}`}>{text.text}</p>\r\n                <Form.Input\r\n                    icon='envelope'\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    error={errors.email}\r\n                    iconPosition='left'\r\n                    placeholder='Email'\r\n                    size={\"large\"}\r\n                    value={email}\r\n                    onChange={(e, {value}) => setEmail(value)}\r\n                />\r\n                <Button fluid color='blue' size={\"large\"}>Submit</Button>\r\n            </Form>\r\n        </Fade>\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n            {verify ? (\r\n                VerifyCode\r\n            ) : (\r\n                EmailForm\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgetPassword;","import React, {useState} from 'react';\r\nimport {Button, Form, Icon} from \"semantic-ui-react\";\r\nimport \"./admin.css\"\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {isLoggedIn as authenticate, ProfileData} from \"../../store/atom\"\r\nimport {useRecoilState, useSetRecoilState} from \"recoil\";\r\nimport ForgetPassword from \"./ForgetPassword\";\r\nimport axios from \"axios\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport {Fade} from \"react-reveal\";\r\n\r\nconst Login = () => {\r\n    <Helmet>\r\n        <title>MyProfile | Login</title>\r\n    </Helmet>\r\n\r\n    const errorDisplay = (e) => {\r\n        setIsLoggedIn(false)\r\n        setLoading(false)\r\n        setErrors({...errors, email: true, password: true})\r\n        if (e.response) {\r\n            console.error(e.response)\r\n            setText({err: true, text: e.response.data.msg})\r\n        } else {\r\n            console.error(e)\r\n            setText({err: true, text: \"Internal server error.\"})\r\n        }\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useRecoilState(authenticate)\r\n    const setProfile = useSetRecoilState(ProfileData)\r\n    const [resetPassword, setResetPassword] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState({email: '', password: ''})\r\n\r\n    const [errors, setErrors] = useState({email: false, password: false})\r\n    const [text, setText] = useState({err: false, text: \"Enter your email and password:\"})\r\n\r\n    const history = useHistory()\r\n    React.useEffect(() => {\r\n        setLoading(false)\r\n    }, []);\r\n\r\n    const handleChange = (e, {name, value}) => {\r\n        setErrors({...errors, [name]: false})\r\n        setData({...data, [name]: value})\r\n    }\r\n    const handleSubmit = async () => {\r\n        if (!data.email || !data.password) {\r\n            setErrors({email: true, password: true})\r\n        } else {\r\n            setLoading(true)\r\n            setText({err: false, text: \"Please wait...\"})\r\n            await axios.post(`${process.env.REACT_APP_API}/api/auth/login`, data)\r\n                .then(response => {\r\n                    setProfile(response.data.data)\r\n                    localStorage.setItem(\"TKID\", response.data.token)\r\n                    localStorage.setItem(\"_id\", response.data.userId)\r\n                    setIsLoggedIn(true)\r\n                    setLoading(false)\r\n                    history.push('/build')\r\n                    // const token = response.data.token\r\n                    // if (token) {\r\n                    //     const config = {headers: {'Authorization': `Bearer ${token}`}}\r\n                    //     axios.get(`${process.env.REACT_APP_API}/api/profile_init`, config)\r\n                    //         .then(res => {\r\n                    //             if (res.data.profile) {\r\n                    //                 setProfile(res.data.profile)\r\n                    //                 localStorage.setItem(\"TKID\", response.data.token)\r\n                    //                 localStorage.setItem(\"_id\", response.data.id)\r\n                    //                 setIsLoggedIn(true)\r\n                    //                 setLoading(false)\r\n                    //                 history.push('/build')\r\n                    //             } else {\r\n                    //                 setIsLoggedIn(false)\r\n                    //                 setLoading(false)\r\n                    //                 setErrors({...errors, email: true, password: true})\r\n                    //                 setText({err: true, text: \"NO PROFILE error.\"})\r\n                    //             }\r\n                    //         })\r\n                    //         .catch(e => {\r\n                    //             errorDisplay(e)\r\n                    //         })\r\n                    // }else {\r\n                    //\r\n                    // }\r\n                })\r\n                .catch(e => {\r\n                    errorDisplay(e)\r\n\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/build\"/>\r\n    }\r\n    const login = (\r\n        <>\r\n            <Fade>\r\n                <p className={`${text.err && 'text-danger'} status-text py-3`}>{text.text}</p>\r\n                <Form className=' mb-4' loading={loading} onSubmit={handleSubmit}>\r\n                    <Form.Input\r\n                        icon='envelope'\r\n                        name=\"email\"\r\n                        error={errors.email}\r\n                        iconPosition='left'\r\n                        placeholder='Email'\r\n                        size={\"large\"}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Form.Input\r\n                        icon='lock'\r\n                        name=\"password\"\r\n                        error={errors.password}\r\n                        iconPosition='left'\r\n                        placeholder='Password'\r\n                        type='password'\r\n                        size=\"large\"\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Button fluid color='blue' size={\"large\"}>Login</Button>\r\n                </Form>\r\n            </Fade>\r\n        </>\r\n    )\r\n    const reset = (\r\n        <>\r\n\r\n            <ForgetPassword/>\r\n\r\n        </>\r\n    )\r\n    return (\r\n        <div className=\"login-main container \">\r\n            <div className=\"card border-white shadow\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h2 className='py-3'>{resetPassword ? \"Password Reset\" : \"Login\"}</h2>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {resetPassword ? reset : login}\r\n                </div>\r\n                <div className=\"password-text card-footer bg-transparent\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col\">\r\n                            {resetPassword &&\r\n                            <>\r\n                                <Icon name={\"arrow circle left\"}/>\r\n                                <a className='footer-action my-5 text-capitalize'\r\n                                   onClick={() => setResetPassword(false)}>\r\n                                    Back to login\r\n                                </a>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {!resetPassword &&\r\n                            <a className='footer-action align-right my-5 '\r\n                               onClick={() => setResetPassword(true)}>\r\n                                Forgot Password\r\n                            </a>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mt-5\">\r\n                <Button primary content='Back to Profile Page' size=\"large\" fluid\r\n                        onClick={() => history.push(\"/\")}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport \"./admin.css\"\r\nimport {Fade} from \"react-reveal\";\r\n\r\nconst DashboardCard = (props) => {\r\n    return (\r\n        <Fade town>\r\n            <div className=\"card-dashboard card p-3\" onClick={props.onClick}>\r\n                <h3>{props.title}</h3>\r\n                <p>{props.desc}</p>\r\n            </div>\r\n        </Fade>\r\n    );\r\n};\r\n\r\nexport default DashboardCard;","import React, {lazy, Suspense, useEffect, useState} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {isLoggedIn, ProfileData} from \"../../store/atom\";\r\nimport {useRecoilState, useRecoilValue} from \"recoil\";\r\nimport \"./admin.css\"\r\nimport DashboardCard from \"./DashboardCard\";\r\nimport {Button, Icon, Loader} from \"semantic-ui-react\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst UserList = lazy(() => import(\"./app/UserList\"));\r\nconst WorkList = lazy(() => import(\"./app/WorkList\"));\r\nconst ContactList = lazy(() => import(\"./app/ContactList\"))\r\nconst SkillList = lazy(() => import(\"./app/SkillList\"))\r\nconst Profile = lazy(() => import(\"./app/Profile\"))\r\nconst EducationList = lazy(() => import(\"./app/EducationList\"))\r\n\r\nconst Dashboard = () => {\r\n    <Helmet>\r\n        <title>MyProfile | Dashboard</title>\r\n    </Helmet>\r\n    const [loggedIn, setLoggedIn] = useRecoilState(isLoggedIn)\r\n    const [component, setComponent] = useState('Dashboard')\r\n    const profile = useRecoilValue(ProfileData);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('TKID')\r\n        if (token) {\r\n            setLoggedIn(true)\r\n        } else {\r\n            setLoggedIn(false)\r\n        }\r\n    });\r\n\r\n    if (!loggedIn) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const DashBoard = () => {\r\n        return (\r\n            <>\r\n                <DashboardCard\r\n                    title=\"My Profile\"\r\n                    onClick={() => setComponent('Profile')}\r\n                    desc=\"Edit information about profile\"\r\n                />\r\n                <DashboardCard\r\n                    title=\"Work\" onClick={() => setComponent('Work')}\r\n                    desc=\"List of your jobs\"\r\n                />\r\n                <DashboardCard\r\n                    title=\"Education\" onClick={() => setComponent('Education')}\r\n                    desc=\"List of your schools, training, etc.\"\r\n                />\r\n                <DashboardCard\r\n                    title=\"Skills\" onClick={() => setComponent('Skills')}\r\n                    desc=\"List of all your skills\"\r\n                />\r\n                <DashboardCard\r\n                    title=\"Contact\" onClick={() => setComponent('Contact')}\r\n                    desc=\"List of all your contacts\"\r\n                />\r\n                <DashboardCard\r\n                    title=\"Users\" onClick={() => setComponent('Users')}\r\n                    desc=\"List of all users\"\r\n                />\r\n            </>)\r\n\r\n    }\r\n    const StateComponent = (props) => {\r\n        let Output;\r\n        switch (props.type) {\r\n            case 'Dashboard':\r\n                Output = (<DashBoard {...props}/>);\r\n                break;\r\n            case 'Users':\r\n                Output = (<UserList {...props} />)\r\n                break;\r\n            case 'Work':\r\n                Output = (<WorkList {...props} />)\r\n                break;\r\n            case 'Education':\r\n                Output = (<EducationList {...props} />)\r\n                break;\r\n            case 'Contact':\r\n                Output = (<ContactList {...props} />)\r\n                break;\r\n            case 'Skills':\r\n                Output = (<SkillList {...props} />)\r\n                break;\r\n            case 'Profile':\r\n                Output = (<Profile {...props} />)\r\n                break;\r\n            default:\r\n                Output = (null);\r\n                break;\r\n        }\r\n        return Output;\r\n    }\r\n    return (\r\n        <div className=\"dashboard-content container pt-4\">\r\n            <div className=\"pb-3 text-right\">\r\n                {/*<Button icon=\"eye\" color=\"black\" content=\"View Page\" size=\"mini\"*/}\r\n                {/*        onClick={() => {*/}\r\n                {/*            const win = window.open(\"/\", '_blank')*/}\r\n                {/*            win.focus()*/}\r\n                {/*        }}*/}\r\n                {/*/>*/}\r\n                <a className=\"font-weight-normal mr-3 text-primary\" href=\"/\" target=\"_blank\">\r\n                    View Page {' '}\r\n                    <Icon name=\"external alternate\" />\r\n                </a>\r\n                <Button icon=\"lock\" content=\"Logout\" color=\"red\" size=\"mini\"\r\n                        onClick={() => {\r\n                            setLoggedIn(false)\r\n                            localStorage.removeItem('TKID')\r\n                            localStorage.removeItem('_id')\r\n                        }}\r\n                />\r\n            </div>\r\n            <div className=\"card bg-transparent border-0 \">\r\n                <div className={`card-header bg-white ${profile.profile.active ? 'border-success' : 'border-danger'}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-3\">\r\n                            {component !== 'Dashboard' && (\r\n                                <Button icon inverted color=\"blue\"\r\n                                        onClick={() => setComponent('Dashboard')}\r\n                                        className=\"float-left mt-2 mx-3\"\r\n                                >\r\n                                    <Icon name='arrow circle left'/>\r\n                                    Back\r\n\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"col\">\r\n                                <h2 className='py-2 text-left'>{component}</h2>\r\n                            </div>\r\n                        </div>\r\n                        {!profile.profile.active && (\r\n                            <div className=\"col text-right pt-2 text-danger\">\r\n                                <p>Account is :\r\n                                    <strong> disabled!</strong>\r\n                                </p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body dashboard-body\">\r\n                    <Suspense fallback={\r\n                        // <Loader active/>\r\n                        <div className=\"text-left spinner-grow\" style={{width: '3rem', height: '3rem'}} >\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        }>\r\n                        {/*<Fade top>*/}\r\n                        <StateComponent type={component}/>\r\n\r\n                        {/*</Fade>*/}\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import './App.css';\nimport React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport Login from \"./components/admin/Login\";\nimport Dashboard from \"./components/admin/Dashboard\";\nimport {isLoggedIn as logging, loader, loadError as error, ProfileData} from \"./store/atom\"\nimport {useSetRecoilState, useRecoilState} from \"recoil\";\nimport axios from \"axios\";\n\n\nfunction App() {\n    const [data, setData] = useRecoilState(ProfileData)\n    const setLoading = useSetRecoilState(loader)\n    const setLoadError = useSetRecoilState(error)\n    const setIsLoggedIn = useSetRecoilState(logging)\n\n    React.useEffect(() => {\n        const fetch = async () => {\n            setLoading(true)\n            const result = await axios.get(`${process.env.REACT_APP_API}/api/profilelist`)\n                .then(res => {\n                    if (res.data && res.data.profile && res.data.profile){\n                        setData(res.data)\n                    } else {\n                        setLoadError(true)\n                        setIsLoggedIn(false)\n                        localStorage.clear()\n                        return data\n                    }\n                    setLoadError(false)\n                    setLoading(false)\n                })\n                .catch(e => {\n                    console.log(e)\n                    localStorage.clear()\n                    setLoadError(true)\n                    setLoading(false)\n                })\n            // return result\n        }\n        fetch();\n\n        const token = localStorage.getItem('TKID')\n        if (token) {\n            setIsLoggedIn(true)\n        } else {\n            setIsLoggedIn(false)\n        }\n\n    }, [])\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact component={Main}/>\n                <Route path=\"/login\" exact component={Login}/>\n                <Route path=\"/build\" exact component={Dashboard}/>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {RecoilRoot} from \"recoil\";\n\nReactDOM.render(\n  <RecoilRoot>\n    <App />\n  </RecoilRoot>,\n  document.getElementById('root')\n);\n","import {atom} from \"recoil\";\r\n\r\nexport const isLoggedIn = atom({\r\n    key: 'isloggedin',\r\n    default: false\r\n})\r\n\r\nexport const ProfileData = atom({\r\n    key: 'currentuser',\r\n    default: {}\r\n})\r\n\r\nexport const loader = atom({\r\n    key: 'loader',\r\n    default: false\r\n});\r\n\r\nexport const loadError = atom({\r\n    key: 'loaderError',\r\n    default: false\r\n})"],"sourceRoot":""}