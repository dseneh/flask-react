{"version":3,"sources":["components/admin/app/AddWork.js","components/admin/app/WorkList.js"],"names":["AddWork","props","useState","loading","setLoading","title","location","company","start","end","desc","current","active","data","setData","errors","setErrors","React","useEffect","handleChange","e","name","value","handleMouseChange","checked","handleCheckClick","handleSubmit","a","_id","token","localStorage","getItem","config","headers","axios","post","process","then","response","handleAddWork","work","hide","catch","console","log","handleUpdate","handleUpdateWork","handleReset","id","put","className","Form","onSubmit","Input","error","placeholder","onChange","label","Group","widths","disabled","Checkbox","toggle","defaultChecked","onClick","type","min","max","size","editor","ClassicEditor","text","getData","toolbar","Button","color","WorkList","editForm","setEditForm","works","setWorks","setError","setWork","get","res","fetchData","handleDeleteWork","delete","filter","style","fontSize","Icon","Segment","minHeight","Loader","Table","bordered","hover","responsive","colSpan","floated","content","icon","labelPosition","primary","w","newWork","map","index","order","length","Popup","trigger","header","on","position"],"mappings":"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","file":"static/js/13.bd827eb3.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Button, Form} from \"semantic-ui-react\";\r\nimport {CKEditor} from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\"\r\nimport axios from \"axios\";\r\nimport {Fade} from \"react-reveal\";\r\n\r\nconst AddWork = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState({\r\n        title: '', location: '', company: '', start: '', end: '', desc: '', current: false, active: false\r\n    })\r\n    const [errors, setErrors] = useState({\r\n        title: false, location: false, company: false, start: false, end: false\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        setData(props.data)\r\n    }, []);\r\n\r\n    const handleChange = (e, {name, value}) => {\r\n        setErrors({...errors, [name]: false})\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleChangeDesc = (e, editor) => {\r\n        const text = editor.getData()\r\n        setData({...data, desc: text})\r\n    }\r\n    const handleMouseChange = (e, {name, checked}) => {\r\n        setData({...data, [name]: checked})\r\n    }\r\n    const handleCheckClick = () => {\r\n        !data.current ? data.end = 'Present' : data.end = ''\r\n    }\r\n    const handleSubmit = async () => {\r\n        if (!data.title || !data.location || !data.company || !data.start || !data.end) {\r\n            setErrors({title: true, location: true, company: true, start: true, end: true})\r\n        } else {\r\n            if (!props.data || !props.data._id || props.data._id === 'undefined') {\r\n                setLoading(true)\r\n                const token = localStorage.getItem('TKID')\r\n                if (token) {\r\n                    setLoading(true)\r\n                    const config = {headers: {'Authorization': `Bearer ${token}`}}\r\n                    await axios.post(`${process.env.REACT_APP_API}/api/work`, data, config)\r\n                        .then(response => {\r\n                            setLoading(false)\r\n                            props.handleAddWork(response.data.work)\r\n                            props.hide()\r\n                        })\r\n                        .catch(e => {\r\n                            if (e.response) {\r\n                                console.log(e.response.data)\r\n                            } else {\r\n                                console.log(e)\r\n                            }\r\n                            setErrors({...errors, title: true, location: true, company: true, start: true, end: true})\r\n                            setLoading(false)\r\n                        })\r\n                }\r\n\r\n            } else {\r\n                await handleUpdate(props.data._id)\r\n                props.handleUpdateWork(data)\r\n                props.hide()\r\n            }\r\n        }\r\n        props.handleReset()\r\n    }\r\n\r\n    const handleUpdate = async (id) => {\r\n        if (data.title === null || !data.location || !data.company || !data.start || !data.end) {\r\n            setErrors({title: true, location: true, company: true, start: true, end: true})\r\n        } else {\r\n            setLoading(true)\r\n            const token = localStorage.getItem('TKID')\r\n            if (token) {\r\n                setLoading(true)\r\n                const config = {headers: {'Authorization': `Bearer ${token}`}}\r\n                await axios.put(`${process.env.REACT_APP_API}/api/work/${id}`, data, config)\r\n                    .then(response => {\r\n                        setLoading(false)\r\n                        props.handleAddWork(response.data.work)\r\n                        props.hide()\r\n                    })\r\n                    .catch(e => {\r\n                        if (e.response) {\r\n                            console.log(e.response.data)\r\n                        } else {\r\n                            console.log(e)\r\n                        }\r\n                        setErrors({...errors, title: true, location: true, company: true, start: true, end: true})\r\n                        setLoading(false)\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container p-4 pt-5'>\r\n            <Fade>\r\n                <Form className=' mb-3' loading={loading} onSubmit={handleSubmit}>\r\n                    <Form.Input\r\n                        name=\"title\"\r\n                        error={errors.title}\r\n                        placeholder='Job Title'\r\n                        onChange={handleChange}\r\n                        label=\"Job Title\"\r\n                        value={data.title}\r\n                    />\r\n                    <Form.Group widths=\"equal\">\r\n                        <Form.Input\r\n                            name=\"company\"\r\n                            label=\"Company\"\r\n                            error={errors.company}\r\n                            placeholder='Company'\r\n                            onChange={handleChange}\r\n                            value={data.company}\r\n                        />\r\n                        <Form.Input\r\n                            name=\"location\"\r\n                            label=\"Location\"\r\n                            error={errors.location}\r\n                            placeholder='City, State'\r\n                            onChange={handleChange}\r\n                            value={data.location}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Input\r\n                            label='Start Date'\r\n                            name=\"start\"\r\n                            error={errors.start}\r\n                            placeholder='Month/Year'\r\n                            onChange={handleChange}\r\n                            value={data.start}\r\n                        />\r\n                        <Form.Input\r\n                            label='End Date'\r\n                            name=\"end\"\r\n                            error={errors.end}\r\n                            value={data.end}\r\n                            disabled={data.current}\r\n                            placeholder='Month/Year'\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Checkbox\r\n                        name=\"current\"\r\n                        toggle\r\n                        label=\"Up to current\"\r\n                        onChange={handleMouseChange}\r\n                        defaultChecked={props.data.current}\r\n                        onClick={handleCheckClick}\r\n                    />\r\n                    <Form.Input\r\n                        name=\"current\"\r\n                        type=\"number\"\r\n                        min={1}\r\n                        max={5}\r\n                        size=\"mini\"\r\n                        onChange={handleMouseChange}\r\n                        defaultChecked={props.data.current}\r\n                        onClick={handleCheckClick}\r\n                    />\r\n                    <CKEditor editor={ClassicEditor} onChange={handleChangeDesc} data={props.data.desc}\r\n                              config={{toolbar: ['bold', 'italic', 'numberedList', 'bulletedList'],}}\r\n                    />\r\n\r\n                    <div className=\"row mt-4 \">\r\n                        <div className=\"col\">\r\n                            <Form.Checkbox\r\n                                toggle\r\n                                name=\"active\"\r\n                                label=\"Show on profile\"\r\n                                onChange={handleMouseChange}\r\n                                defaultChecked={props.data.active}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col text-right\">\r\n\r\n                            <Button className=\"\" color='blue' size={\"large\"}>Save</Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </Fade>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddWork;","import React, {useEffect, useState} from 'react';\r\nimport {Table} from \"react-bootstrap\";\r\nimport {Button, Icon, Loader, Popup, Segment} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport AddWork from \"./AddWork\";\r\nimport {Fade} from \"react-reveal\";\r\n\r\n\r\nconst WorkList = () => {\r\n    const [editForm, setEditForm] = useState(false)\r\n    const [works, setWorks] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    const [work, setWork] = useState({\r\n\r\n\r\n    })\r\n\r\n\r\n    useEffect( () => {\r\n        const fetchData = async () => {\r\n\r\n        const token = localStorage.getItem('TKID')\r\n        if (token) {\r\n            setLoading(true)\r\n            const config = {\r\n                headers: {'Authorization': `Bearer ${token}`}\r\n            }\r\n            await axios.get(`${process.env.REACT_APP_API}/api/work`, config)\r\n                .then(res => {\r\n                    setWorks(res.data.work)\r\n                    setLoading(false)\r\n                })\r\n                .catch(e => {\r\n                    setLoading(false)\r\n                    setError(true)\r\n                      if (e.response) {\r\n                            console.log(e.response.data)\r\n                        }else {\r\n                        console.log(e)\r\n                        }\r\n                })\r\n        }\r\n        setLoading(false)\r\n        }\r\n        fetchData()\r\n    }, []);\r\n\r\n\r\n    const handleAddWork = (w) => {\r\n        setWorks([...works, w])\r\n    }\r\n    const handleDeleteWork = async (id) => {\r\n        const token = localStorage.getItem('TKID')\r\n        setLoading(true)\r\n        const config = {\r\n            headers: {'Authorization': `Bearer ${token}`}\r\n        }\r\n        await axios.delete(`${process.env.REACT_APP_API}/api/work/${id}`, config)\r\n            .then(() => {\r\n                const work = works.filter((work) => work._id !== id)\r\n                setWorks(work)\r\n                setLoading(false)\r\n            })\r\n            .catch(e => {\r\n                setLoading(false)\r\n                setError(true)\r\n                 if (e.response) {\r\n                            console.log(e.response.data)\r\n                        }else {\r\n                        console.log(e)\r\n                        }\r\n            })\r\n    }\r\n    const handleReset = () => {\r\n        setWork({})\r\n    }\r\n    const handleUpdateWork = (data) => {\r\n        const newWork = works.map(w => {\r\n            if (w._id === data._id) {\r\n                return data;\r\n            }\r\n            return w;\r\n        })\r\n        setWorks(newWork)\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div style={{fontSize: '1.6rem'}}>\r\n                <Icon name=\"warning sign\" size=\"large\" color=\"red\"/>\r\n                <p>Oops! There was an error loading data.</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <Segment style={{minHeight: 300}}>\r\n                    <Loader size='large' active={loading}>Loading</Loader>\r\n                </Segment>\r\n            ) : (\r\n                <Table bordered hover responsive className=\"bg-white\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th colSpan=\"5\">\r\n                            {editForm ? (\r\n                                <Button\r\n                                    floated='right'\r\n                                    color='red'\r\n                                    size='small'\r\n                                    content='Cancel'\r\n                                    onClick={() => {\r\n                                        setEditForm(false)\r\n                                        setWork({})\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n\r\n                                <Button\r\n                                    floated='right'\r\n                                    icon='plus'\r\n                                    labelPosition='left'\r\n                                    primary\r\n                                    size='small'\r\n                                    content='New'\r\n                                    onClick={() => {\r\n                                        setEditForm(true)\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {editForm ? (\r\n                        <AddWork\r\n                            handleAddWork={handleAddWork}\r\n                            hide={() => setEditForm(false)}\r\n                            data={work}\r\n                            handleUpdateWork={handleUpdateWork}\r\n                            handleReset={handleReset}\r\n                        />\r\n                    ) : (\r\n                        works.map((work, index) => (\r\n                            <tr key={index}>\r\n                                <td className={`${!work.active && 'text-danger'} text-left`}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                              <h5 className=\"font-weight-bold mb-0\">{work.title}</h5>\r\n                                    <p className=\"text-muted m-0\">\r\n                                        {work.location}\r\n                                    </p>\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            <Button disabled={work.order >= works.length} className=\"m-1\" size=\"mini\" color=\"blue\" icon=\"arrow up\"\r\n                                                  onClick={() => {\r\n                                                      // setEditForm(true)\r\n                                                      // setWork(work)\r\n                                                  }}\r\n                                    />\r\n                                     <Button disabled={work.order === 1} className=\"m-1\" size=\"mini\" color=\"blue\" icon=\"arrow down\"\r\n                                                  onClick={() => {\r\n                                                      // setEditForm(true)\r\n                                                      // setWork(work)\r\n                                                  }}\r\n                                    />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                    <span><Button className=\"m-1\" size=\"mini\" color=\"blue\" icon=\"pencil\"\r\n                                                  onClick={() => {\r\n                                                      setEditForm(true)\r\n                                                      setWork(work)\r\n                                                  }}\r\n                                    /></span>\r\n                                    <span>\r\n                                    <Popup\r\n                                        trigger={\r\n                                            <Button className=\"m-1\" color=\"red\" size=\"mini\" icon=\"delete\"\r\n\r\n\r\n                                            />\r\n                                        }\r\n                                        header={<h5 className=\"mb-3\">Are you sure you want to delete this item?</h5>}\r\n                                        content={<Button color='red' content='Yes'\r\n                                                         onClick={() => handleDeleteWork(work._id)}/>}\r\n                                        on='click'\r\n                                        position='top right'\r\n                                    />\r\n                                </span>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    )}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WorkList;"],"sourceRoot":""}