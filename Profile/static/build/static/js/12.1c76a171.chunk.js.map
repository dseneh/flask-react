{"version":3,"sources":["components/admin/app/AddSkill.js","components/admin/app/SkillList.js"],"names":["AddSkill","props","useState","loading","setLoading","skills","active","data","setData","React","useEffect","handleSubmit","a","_id","token","localStorage","getItem","config","headers","axios","post","process","then","hide","catch","e","response","console","log","handleUpdate","id","put","className","Form","onSubmit","disabled","handleDisabled","editor","ClassicEditor","onChange","text","getData","toolbar","Checkbox","name","toggle","label","checked","defaultChecked","Button","color","size","SkillList","editForm","setEditForm","setSkills","error","setError","get","res","fetchData","style","fontSize","Icon","Segment","minHeight","Loader","Table","bordered","hover","responsive","colSpan","floated","content","onClick","icon","labelPosition","primary","handleReset"],"mappings":"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","file":"static/js/12.1c76a171.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Button, Form} from \"semantic-ui-react\";\r\nimport {CKEditor} from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\"\r\nimport axios from \"axios\";\r\nimport {Fade} from \"react-reveal\";\r\n\r\nconst AddSkill = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState({\r\n        skills: '', active: true\r\n    })\r\n    // const [errors, setErrors] = useState(false)\r\n\r\n    React.useEffect(() => {\r\n        setData(props.data)\r\n    }, []);\r\n\r\n\r\n    const handleChangeDesc = (e, editor) => {\r\n        const text = editor.getData()\r\n        setData({...data, skills: text})\r\n    }\r\n    const handleMouseChange = (e, {name, checked}) => {\r\n        setData({...data, [name]: checked})\r\n    }\r\n    const handleSubmit = async () => {\r\n        if (!props.data._id || props.data._id === 'undefined') {\r\n            setLoading(true)\r\n            const token = localStorage.getItem('TKID')\r\n            if (token) {\r\n                setLoading(true)\r\n                const config = {headers: {'Authorization': `Bearer ${token}`}}\r\n                await axios.post(`${process.env.REACT_APP_API}/api/skills`, data, config)\r\n                    .then(() => {\r\n                        setLoading(false)\r\n                        // props.handleAddSkill(response.data.skills)\r\n                        props.hide()\r\n                    })\r\n                    .catch(e => {\r\n                        if (e.response) {\r\n                            console.log(e.response.data)\r\n                        } else {\r\n                            console.log(e)\r\n                        }\r\n                        setLoading(false)\r\n                    })\r\n            }\r\n        } else {\r\n            await handleUpdate()\r\n            props.hide()\r\n        }\r\n    }\r\n\r\n    const handleUpdate = async () => {\r\n        const id = props.data._id\r\n        setLoading(true)\r\n        const token = localStorage.getItem('TKID')\r\n        if (token) {\r\n            setLoading(true)\r\n            const config = {headers: {'Authorization': `Bearer ${token}`}}\r\n            await axios.put(`${process.env.REACT_APP_API}/api/skills/${id}`, data, config)\r\n                .then(() => {\r\n                    setLoading(false)\r\n                    props.hide()\r\n                })\r\n                .catch(e => {\r\n                    if (e.response) {\r\n                        console.log(e.response.data)\r\n                    } else {\r\n                        console.log(e)\r\n                    }\r\n                    // setErrors(true)\r\n                    setLoading(false)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container p-4 pt-5'>\r\n            <Fade>\r\n                <Form className=' mb-3' loading={loading} onSubmit={handleSubmit} disabled={!props.handleDisabled}>\r\n                    <h6 className=\"font-weight-bold mb-3\">Add your skill sets:</h6>\r\n                    <CKEditor editor={ClassicEditor} onChange={handleChangeDesc} data={props.data.skills}\r\n                              config={{toolbar: ['bold', 'italic', 'numberedList', 'bulletedList'],}}\r\n                              disabled={!props.handleDisabled}\r\n                    />\r\n\r\n                    <div className=\"row mt-4 \">\r\n                        <div className=\"col\">\r\n                            <Form.Checkbox\r\n                                name=\"active\"\r\n                                toggle\r\n                                label=\"Show on profile\"\r\n                                onChange={handleMouseChange}\r\n                                defaultChecked={props.data.active}\r\n                                disabled={!props.handleDisabled}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col text-right\">\r\n                            <Button disabled={!props.handleDisabled} className=\"\" color='blue'\r\n                                    size={\"large\"}>Save</Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </Fade>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddSkill;","import React, {useEffect, useState} from 'react';\r\nimport {Table} from \"react-bootstrap\";\r\nimport {Button, Icon, Loader, Segment} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport AddSkill from \"./AddSkill\";\r\n\r\n\r\nconst SkillList = () => {\r\n    const [editForm, setEditForm] = useState(false)\r\n    const [skills, setSkills] = useState({active: true})\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n\r\n    useEffect( () => {\r\n        const fetchData = async () => {\r\n            const token = localStorage.getItem('TKID')\r\n        if (token) {\r\n            setLoading(true)\r\n            await axios.get(`${process.env.REACT_APP_API}/api/skills`)\r\n                .then(res => {\r\n                    setSkills(res.data.skills)\r\n                    setLoading(false)\r\n                })\r\n                .catch(e => {\r\n                    setLoading(false)\r\n                    setError(true)\r\n                      if (e.response) {\r\n                            console.log(e.response.data)\r\n                        }else {\r\n                        console.log(e)\r\n                        }\r\n                })\r\n        }\r\n        setLoading(false)\r\n        }\r\n        fetchData()\r\n    }, []);\r\n\r\n\r\n    const handleReset = () => {\r\n        setSkills({})\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div style={{fontSize: '1.6rem'}}>\r\n                <Icon name=\"warning sign\" size=\"large\" color=\"red\"/>\r\n                <p>Oops! There was an error loading data.</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <Segment style={{minHeight: 300}}>\r\n                    <Loader size='large' active={loading}>Loading</Loader>\r\n                </Segment>\r\n            ) : (\r\n                <Table bordered hover responsive className=\"bg-white\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th colSpan=\"5\">\r\n                            {editForm ? (\r\n                                <Button\r\n                                    floated='right'\r\n                                    color='red'\r\n                                    size='small'\r\n                                    content='Cancel'\r\n                                    onClick={() => {\r\n                                        setEditForm(false)\r\n                                        // setSkill({})\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n\r\n                                <Button\r\n                                    floated='right'\r\n                                    icon='pencil'\r\n                                    labelPosition='left'\r\n                                    primary\r\n                                    size='small'\r\n                                    content='Edit'\r\n                                    onClick={() => {\r\n                                        setEditForm(true)\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        <AddSkill\r\n                            handleDisabled={editForm}\r\n                            hide={() => setEditForm(false)}\r\n                            data={skills}\r\n                            // handleUpdateSkill={handleUpdateSkill}\r\n                            handleReset={handleReset}\r\n                        />\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SkillList;"],"sourceRoot":""}